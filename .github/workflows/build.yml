name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]

    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry

    - name: Install dependencies
      shell: bash
      run: python -m poetry install

    - name: Wait for PostgreSQL to initialize
      run: sleep 10

    - name: Verify PostgreSQL is running
      run: |
        for i in {1..30}; do
          if pg_isready -h postgres -p 5432 -U postgres; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "Waiting for PostgreSQL... $i seconds"
          sleep 1
        done
        if ! pg_isready -h postgres -p 5432 -U postgres; then
          echo "PostgreSQL failed to start in time."
          exit 1
        fi
      env:
        PGPASSWORD: postgres

    - name: Run migrations
      run: |
        poetry run python manage.py migrate

    - name: Run tests
      run: |
        poetry run python manage.py test

    - name: Check PostgreSQL logs
      if: failure()
      run: |
        docker logs $(docker ps -q --filter ancestor=postgres:15)
